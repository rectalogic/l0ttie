name: Publish GitHub Release

on:
  push:
    tags:
      - "**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build distribution package
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Rustup
        run: |
          rustup update stable
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.4"
      - name: Install conan
        run: |
          uv tool install conan
          uv tool update-shell
      - name: Build
        shell: bash
        run: |
          cargo build --all-targets --release --verbose
          # ffmpeg on macOS incorrectly expects .dylib not .so
          if [ "$RUNNER_OS" == "macOS" ]; then
            ln -s l0ttie.so target/release/l0ttie.dylib
          fi
          shopt -s extglob
          cd target/release/
          tar -czvf ../../l0ttie-${{ runner.os }}.tar.gz l0ttie.${{ runner.os == 'Windows' && 'dll' || '@(so|dylib)' }}
      - name: Get crate version
        id: version
        shell: bash
        run: |
          CRATE_VERSION=$(cargo metadata --format-version 1 --no-deps | jq --raw-output  '.packages | map(select(.name == "'l0ttie'")) | .[0].version')
          echo "crate=$CRATE_VERSION" >> "$GITHUB_OUTPUT"
      - name: Upload Release Assets
        if: ${{ github.event_name != 'workflow_dispatch' && github.ref_name == steps.version.outputs.crate }}
        uses: softprops/action-gh-release@v1
        with:
          files: "*.tar.gz"
      - name: Upload Artifacts
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: l0ttie-${{ runner.os }}
          path: "*.tar.gz"
